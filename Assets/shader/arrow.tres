[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://Assets/Images/shader_mask.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D mask_texture;


void fragment() {

 	vec4 base = texture(mask_texture, UV);
	if (base.a > 0.5){
		float t = TIME * 2.0;
	    vec2 uv = UV;
	    float uv_x_deform = cos(uv.x);
	    vec2 offs_uv = vec2(cos(t + uv.y ) * 0.5 + sin(t + uv.x) * 0.5 , cos(t + uv.x)* 0.5+ sin(t + uv.y) * 0.5) * 0.01;
	
	    vec4 img = texture(TEXTURE, uv + vec2(offs_uv.x, offs_uv.y));
	    COLOR = img;
	}else{
		COLOR =texture(TEXTURE, UV);
	}
    
}

void vertex(){
	VERTEX.g += sin(TIME* 4.0)* 20.0;
}"

[resource]
shader = SubResource( 1 )
shader_param/mask_texture = ExtResource( 1 )

